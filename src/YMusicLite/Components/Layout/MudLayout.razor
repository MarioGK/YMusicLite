@inherits LayoutComponentBase

<MudThemeProvider Theme="@_currentTheme" IsDarkMode="@_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudBlazor.MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">YMusicLite</MudText>
        <MudSpacer />
        <MudIconButton Icon="@(_isDarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)" 
                       Color="Color.Inherit" 
                       OnClick="@ToggleTheme" />
    </MudAppBar>
    
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    
    <MudMainContent Class="pt-16 px-16">
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="my-16 pt-16">
            @Body
        </MudContainer>
    </MudMainContent>
</MudBlazor.MudLayout>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = true;
    private MudTheme _currentTheme = new();

    protected override void OnInitialized()
    {
        _currentTheme = new MudTheme()
        {
            PaletteLight = new PaletteLight()
            {
                Primary = "#D32F2F",
                Secondary = "#FF9800",
                AppbarBackground = "#D32F2F",
            },
            PaletteDark = new PaletteDark()
            {
                Primary = "#D32F2F",
                Secondary = "#FF9800",
                AppbarBackground = "#D32F2F",
                Dark = "#1a1a1a",
                Surface = "#1e1e1e",
                Background = "#121212",
            }
        };
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void ToggleTheme()
    {
        _isDarkMode = !_isDarkMode;
    }
}